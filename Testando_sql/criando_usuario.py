from database import conectar, desconectar

def cadastrar_usuario():
    nome = input('Qual seu nome?\n')
    usuario = input('Qual seu usuario?\n')
    senha = input('Digite sua senha: \n')


    conexao, cursor = conectar()

    try:
        cursor.execute("INSERT INTO usuarios (nome, usuario, senha) VALUES (?, ?, ?)", (nome, usuario, senha))
        conexao.commit()
        print("‚úÖ Usu√°rio cadastrado com sucesso!")
    except Exception as e:
            print(f"‚ùå Erro ao cadastrar usu√°rio: {e}")
    finally:
            desconectar(conexao)

def listar_usuarios():
    conexao, cursor = conectar()

    cursor.execute("SELECT id, nome, usuario FROM usuarios")
    usuarios = cursor.fetchall()
    
    if usuarios: #√© true
        print('Usu√°rios:\n')
        for usuario in usuarios:
             print(f'Nome: {usuario[1]} - Nome de usu√°rio: {usuario[2]}')
    else:
          print('Nenhum usu√°rio cadastrado')
    desconectar(conexao)

def apagar_usuario():
    listar_usuarios()

    id_usuario = input('Digite o ID do usu√°rio que ser√° deletado: ')

    # Verifica√ß√£o se o ID √© um n√∫mero
    if not id_usuario.isdigit():
        print("‚ùå ID inv√°lido. Digite um n√∫mero.")
        return

    # üîç Corre√ß√£o: Converter para inteiro
    id_usuario = int(id_usuario)

    conexao, cursor = conectar()

    try:
        # Executa o comando SQL para deletar o usu√°rio
        cursor.execute("DELETE FROM usuarios WHERE id = ?", (id_usuario,))

        # Verifica se algum registro foi afetado
        if cursor.rowcount > 0:
            conexao.commit()
            print("‚úÖ Usu√°rio deletado com sucesso!")
        else:
            print("‚ùå ID n√£o encontrado. Verifique e tente novamente.")

    except Exception as e:
        print(f"‚ùå Erro ao tentar deletar usu√°rio: {e}")
    
    # Fecha a conex√£o
    desconectar(conexao)
